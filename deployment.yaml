apiVersion: v1
kind: Namespace
metadata:
  name: epimetheus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: epimetheus
  namespace: epimetheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kquery-view
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: epimetheus:view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kquery-view
subjects:
- kind: ServiceAccount
  name: epimetheus
  namespace: epimetheus
---
apiVersion: talos.dev/v1alpha1
kind: ServiceAccount
metadata:
  name: epimetheus-talos-secrets
  namespace: epimetheus
spec:
  roles:
  - os:reader
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: epimetheus-credentials
  namespace: epimetheus
spec:
  secretStoreRef:
    name: vault-backend-global
    kind: ClusterSecretStore
  refreshInterval: "15m"
  dataFrom:
  - extract:
      key: k8s/zerobytesfree.net/epimetheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: epimetheus
  namespace: epimetheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: epimetheus
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: epimetheus
        app.kubernetes.io/version: "v0.2"
    spec:
      containers:
      - command:
        - /app
        image: ghcr.io/glbyers/epimetheus:0.0.1
        name: epimetheus
        env:
        - name: GIN_MODE
          value: release
        - name: LISTEN_ADDRESS
          value: "0.0.0.0:8080"
        - name: TRUSTED_PROXIES
          value: "10.0.46.1"
        - name: AUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: epimetheus-credentials
              key: username
        - name: AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: epimetheus-credentials
              key: password
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        livenessProbe:
          httpGet:
            path: /ping
            port: http
        resources:
          limits:
            cpu: 25m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/secrets/talos.dev
          name: talos-secrets
      serviceAccountName: epimetheus
      volumes:
      - name: talos-secrets
        secret:
          secretName: epimetheus-talos-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: epimetheus
  namespace: epimetheus
  labels:
    app.kubernetes.io/name: epimetheus
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: epimetheus
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  sessionAffinity: None
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kquery
  namespace: epimetheus
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-acme-issuer
    cert-manager.io/common-name: kquery.zerobytesfree.net
    cert-manager.io/private-key-size: "4096"
  labels:
    app.kubernetes.io/name: epimetheus
spec:
  ingressClassName: traefik
  rules:
  - host: kquery.zerobytesfree.net
    http:
      paths:
      - backend:
          service:
            name: epimetheus
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - kquery.zerobytesfree.net
    secretName: kquery-ingress-tls
